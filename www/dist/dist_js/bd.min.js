angular.module('app',
  [
    'ionic',
    'auth0',
    'firebase',
    'angular-storage',
    'angular-jwt',
    'ionic.service.core',
    'templates',
    'app.welcome',
    'app.register',
    'app.login',
    'app.profile',
    'app.landing',
    'app.tabs'
  ])

  .run(function($ionicPlatform) {
    $ionicPlatform.ready(function() {
      // Hide the accessory bar by default (remove this to show the accessory bar above the keyboard
      // for form inputs)
      if(window.cordova && window.cordova.plugins.Keyboard) {
        cordova.plugins.Keyboard.hideKeyboardAccessoryBar(true);
      }

      if(window.StatusBar) {
        // org.apache.cordova.statusbar required
        StatusBar.styleDefault();
      }
    });
  })

  //.run(function($ionicPlatform, $rootScope, auth, store, jwtHelper, $location) {
  //  $ionicPlatform.ready(function() {
  //    // Hide the accessory bar by default (remove this to show the accessory bar above the keyboard
  //    // for form inputs)
  //    if (window.cordova && window.cordova.plugins.Keyboard) {
  //      cordova.plugins.Keyboard.hideKeyboardAccessoryBar(true);
  //    }
  //    if (window.StatusBar) {
  //      // org.apache.cordova.statusbar required
  //      StatusBar.styleDefault();
  //    }
  //  });
  //
  //  auth.hookEvents();
  //  //This event gets triggered on URL change
  //  var refreshingToken = null;
  //  $rootScope.$on('$locationChangeStart', function() {
  //    var token = store.get('token');
  //    var refreshToken = store.get('refreshToken');
  //    if (token) {
  //      if (!jwtHelper.isTokenExpired(token)) {
  //        if (!auth.isAuthenticated) {
  //          auth.authenticate(store.get('profile'), token);
  //        }
  //      } else {
  //        if (refreshToken) {
  //          if (refreshingToken === null) {
  //            refreshingToken = auth.refreshIdToken(refreshToken).then(function(idToken) {
  //              store.set('token', idToken);
  //              auth.authenticate(store.get('profile'), idToken);
  //            }).finally(function() {
  //              refreshingToken = null;
  //            });
  //          }
  //          return refreshingToken;
  //        } else {
  //          $location.path('/login');// Notice: this url must be the one defined
  //        }                          // in your login state. Refer to step 5.
  //      }
  //    }
  //    if (!auth.isAuthenticated) {
  //      var token = store.get('token');
  //      if (token) {
  //        auth.authenticate(store.get('profile'), token);
  //      }
  //    }
  //  });
  //})

  .factory('Auth', function($firebaseAuth) {
    var endPoint = 'https://boiling-heat-1945.firebaseio.com';
    var usersRef = new Firebase(endPoint);
    return $firebaseAuth(usersRef);
  })

  .factory('firebaseData', function($firebase, FIREBASE_URI) {
    var ref = new Firebase(FIREBASE_URI);

    var users = function() {
      return ref.child('users');
    }

   var getDares = function(){
     return ref.child('dares');
   }

    return {
      getUsers : users,
      getDares : getDares
    }

  })


.constant('FIREBASE_URI', 'https://boiling-heat-1945.firebaseio.com');

//.run(function($ionicPlatform ,$rootScope, auth, store, jwtHelper, $location) {
//    $ionicPlatform.ready(function() {
//      // Hide the accessory bar by default (remove this to show the accessory bar above the keyboard
//      // for form inputs)
//      if (window.cordova && window.cordova.plugins && window.cordova.plugins.Keyboard) {
//        cordova.plugins.Keyboard.hideKeyboardAccessoryBar(true);
//        cordova.plugins.Keyboard.disableScroll(true);
//
//      }
//      if (window.StatusBar) {
//        // org.apache.cordova.statusbar required
//        StatusBar.styleLightContent();
//      }
//
//     // auth.hookEvents();
//
//
//
//      //This event gets triggered on URL change
//      //var refreshingToken = null;
//      //$rootScope.$on('$locationChangeStart', function() {
//      //  var token = store.get('token');
//      //  var refreshToken = store.get('refreshToken');
//      //  if (token) {
//      //    if (!jwtHelper.isTokenExpired(token)) {
//      //      if (!auth.isAuthenticated) {
//      //        auth.authenticate(store.get('profile'), token);
//      //      }
//      //    } else {
//      //      if (refreshToken) {
//      //        if (refreshingToken === null) {
//      //          refreshingToken = auth.refreshIdToken(refreshToken).then(function(idToken) {
//      //            store.set('token', idToken);
//      //            auth.authenticate(store.get('profile'), idToken);
//      //          }).finally(function() {
//      //            refreshingToken = null;
//      //          });
//      //        }
//      //        return refreshingToken;
//      //      } else {
//      //        $location.path('/login');// Notice: this url must be the one defined
//      //      }                          // in your login state. Refer to step 5.
//      //    }
//      //  }
//      //});
//      //
//
//
//
//
//
//
//
//
//
//// kick off the platform web client
//      Ionic.io();
//
//// this will give you a fresh user or the previously saved 'current user'
//      var user = Ionic.User.current();
//
//// if the user doesn't have an id, you'll need to give it one.
//      if (!user.id) {
//        user.id = Ionic.User.anonymousId();
//        // user.id = 'your-custom-user-id';
//      }
//
////persist the user
//      user.save();
//      var push = new Ionic.Push({
//        "debug": true
//      });
//
//      push.register(function(token) {
//        console.log("Device token:",token.token);
//      });
//    });
//  })

var AUTH0_CLIENT_ID='0NF0PCmamT2ndVAq4lqdV1znp5Oaf91w'; 
var AUTH0_DOMAIN='dkapp.auth0.com'; 
var AUTH0_CALLBACK_URL=location.href;
angular.module("templates", []).run(["$templateCache", function($templateCache) {$templateCache.put("chat-detail.html","<!--\n  This template loads for the \'tab.friend-detail\' state (app.js)\n  \'friend\' is a $scope variable created in the FriendsCtrl controller (controllers.js)\n  The FriendsCtrl pulls data from the Friends service (service.js)\n  The Friends service returns an array of friend data\n-->\n<ion-view view-title=\"{{chatDet.chat.name}}\">\n  <ion-content class=\"padding\">\n    <img ng-src=\"{{chatDet.chat.face}}\" style=\"width: 64px; height: 64px\">\n    <p>\n      {{chatDet.chat.lastText}}\n    </p>\n  </ion-content>\n</ion-view>\n");
$templateCache.put("landing.html","<div class=\"list card\">\n\n  <div class=\"item item-avatar\">\n    <img src=\"avatar.jpg\">\n    <h2>Pretty Hate Machine</h2>\n    <p>Nine Inch Nails</p>\n  </div>\n\n  <div class=\"item item-image\">\n    <img src=\"cover.jpg\">\n  </div>\n\n  <a class=\"item item-icon-left assertive\" href=\"#\">\n    <i class=\"icon ion-music-note\"></i>\n    Start listening\n  </a>\n\n</div>\n");
$templateCache.put("login.html","\n<!--<ion-pane id=\"welcome\" class=\"welcomePane\">-->\n  <!--<h1 class=\"title\">Dare to Take the first step to changing your life!!</h1>-->\n\n  <!--<ion-footer-bar>-->\n    <!--<a class=\"full_width button button-assertive\" ng-click=\"login.login()\" >-->\n      <!--Lets Go !!-->\n    <!--</a>-->\n  <!--</ion-footer-bar>-->\n<!--</ion-pane>-->\n<ion-view hide-nav-bar=\"true\">\n  <ion-content scroll=\"false\">\n\n    <section class=\"login-container\">\n      <div class = \"col header text-center\">\n        <img src=\"./img/bdIcon.png\" class = \"logo\" />\n      </div>\n\n      <div class = \"col text-center\">\n        <button  class=\"button icon-left ion-social-facebook button-positive button-full\"  ng-click=\"login.facebook()\">Connect with Facebook</button>\n\n      </div>\n\n      <div class = \"col button-row text-center\">\n        OR\n      </div>\n\n      <div class = \"col button-row\">\n        <!--<form name=\"login.loginForm\" novalidate>-->\n          <div class=\"list\">\n            <label class=\"item item-input item-floating-label\">\n              <span class=\"input-label\">Email</span>\n              <input type=\"email\" placeholder=\"Email\" ng-model=\"login.email\">\n            </label>\n            <label class=\"item item-input item-floating-label\">\n              <span class=\"input-label\">Password</span>\n              <input type=\"password\" placeholder=\"Password\" ng-model=\"login.pwd\">\n            </label>\n          </div>\n          <div class=\"padding\">\n            <button  class=\"button button-block button-balanced\" ng-click=\"login.emailLogin(login.email, login.pwd)\">Access</button>\n          </div>\n          <!--</form>-->\n      </div>\n\n      <div class = \"col button-row\">\n        <a ui-sref=\"register\">New Here? Sign In !</a>\n\n      </div>\n    </section>\n\n\n\n\n    <!---->\n    <!---->\n    <!--<div class=\"card\">-->\n    <!--&lt;!&ndash; The content of the page &ndash;&gt;-->\n    <!--<form name=\"login.loginForm\" novalidate>-->\n      <!--<div class=\"list\">-->\n        <!--<label class=\"item item-input item-floating-label\">-->\n          <!--<span class=\"input-label\">Email</span>-->\n          <!--<input type=\"email\" placeholder=\"Email\" ng-model=\"user.email\">-->\n        <!--</label>-->\n        <!--<label class=\"item item-input item-floating-label\">-->\n          <!--<span class=\"input-label\">Password</span>-->\n          <!--<input type=\"password\" placeholder=\"Password\" ng-model=\"user.password\">-->\n        <!--</label>-->\n      <!--</div>-->\n      <!--<div class=\"padding\">-->\n        <!--<button  class=\"button button-block button-balanced\">Access</button>-->\n      <!--</div>-->\n      <!--<div class=\"padding\">-->\n      <!--<span class=\"col-center\">OR</span>-->\n        <!--</div>-->\n      <!--<div class=\"padding\">-->\n      <!--<button  class=\"button icon-center ion-social-facebook button-positive button-full\"  ng-click=\"login.facebook()\" ng-hide=\"authData\"></button>-->\n      <!--</div>-->\n    <!--</form>-->\n    <!--<div class=\"card\" ng-show=\"authData\">-->\n      <!--<img ng-src=\"{{authData.facebook.cachedUserProfile.picture.data.url}}\" />-->\n      <!--<span>Welcome back {{authData.facebook.displayName}}</span>-->\n    <!--</div>-->\n\n    <!--<button ng-click=\"login.logout()\" ng-show=\"authData\">Logout</button>-->\n    </div>\n  </ion-content>\n</ion-view>\n");
$templateCache.put("profile.html","<ion-view title=\"Profile\" ng-init=\"init()\">\n  <ion-content>\n    <div class=\"list card\">\n      <div class=\"item item-avatar\">\n        <img ng-src=\"{{profile.profileData.picture.data.url}}\">\n        <h2>{{profile.profileData.name}}</h2>\n        <p>{{profile.profileData.id}}</p>\n      </div>\n      <a href=\"#\" class=\"item item-icon-left\">\n        <i class=\"icon ion-earth\"></i>\n        {{profile.profileData.website}}\n      </a>\n      <a href=\"#\" class=\"item item-icon-left\">\n        <i class=\"icon ion-home\"></i>\n        {{profile.profileData.location.name}}\n      </a>\n      <a href=\"#\" class=\"item item-icon-left\">\n        <i class=\"icon ion-heart\"></i>\n        {{profile.profileData.relationship_status}}\n      </a>\n    </div>\n    <!-- user-info.tpl.html -->\n    <span>Name is {{auth.profile.nickname}}</span>\n  </ion-content>\n</ion-view>\n");
$templateCache.put("register.html","<ion-view view-title=\"Get Started!\">\n  <ion-content>\n    <!--<button class=\"button button-energized\" ng-click=\"addImage()\">-->\n      <!--Add image-->\n    <!--</button><br><br>-->\n      <!--<img ng-repeat=\"image in images\" ng-src=\"{{urlForImage(image)}}\" height=\"200px\"/>-->\n\n<form novalidate>\n\n  <div class=\"list\">\n    <label class=\"item item-input item-floating-label\">\n      <span class=\"input-label\">Name</span>\n      <input type=\"text\" placeholder=\"John Doe\" ng-model=\"name\">\n    </label>\n    <label class=\"item item-input item-floating-label\">\n      <span class=\"input-label\">Email</span>\n      <input type=\"text\" placeholder=\"example@email.com\" ng-model=\"email\">\n    </label>\n    <label class=\"item item-input item-floating-label\">\n      <span class=\"input-label\">Password</span>\n      <input type=\"password\" placeholder=\"Password\" ng-model=\"pwd\">\n    </label>\n  </div>\n  <div class=\"padding\">\n    <button  class=\"button button-block button-positive\" ng-click=\"register.addUser(email,pwd, name)\">Create Greatness</button>\n   </div>\n\n</form>\n\n</ion-content>\n\n</ion-view>\n\n");
$templateCache.put("tab-account.html","<ion-view view-title=\"Account\">\n  <ion-content>\n    <button class=\"button button-positive button-block\" ng-click=\"account.logout()\">\n    Logout\n    </button>\n  </ion-content>\n</ion-view>\n");
$templateCache.put("tab-chats.html","<ion-view view-title=\"Chats\">\n  <ion-content>\n    <ion-list>\n      <ion-item class=\"item-remove-animate item-avatar item-icon-right\" ng-repeat=\"chat in chats.chats\" type=\"item-text-wrap\" href=\"#/tab/chats/{{chats.chat.id}}\">\n        <img ng-src=\"{{chats.chat.face}}\">\n        <h2>{{chats.chat.name}}</h2>\n        <p>{{chats.chat.lastText}}</p>\n        <i class=\"icon ion-chevron-right icon-accessory\"></i>\n\n        <ion-option-button class=\"button-assertive\" ng-click=\"chats.remove(chat)\">\n          Delete\n        </ion-option-button>\n      </ion-item>\n    </ion-list>\n  </ion-content>\n</ion-view>\n");
$templateCache.put("tab-dare.html","<ion-view title=\"Dare on\">\n  <ion-content>\n      <div class=\"well\">\n        <ion-nav-buttons side=\"left\">\n          <button class=\"button\" ng-click=\"$ionicGoBack($event)\"><i class=\"ion-arrow-left-c\"></i> Back</button>\n        </ion-nav-buttons>\n\n        <form class=\"form-inline\" name=\"dareForm\" role=\"form\" novalidate ng-submit=\"dare.addItem()\">\n          <div class=\"card\">\n            <div class=\"item item-input-inset\">\n                <div class=\"row\">\n                  <div class=\"col-25\">\n                    <i class=\"red ion-ios-heart\"></i>\n                  </div>\n                  <div class=\"col-75\">\n                    <input type=\"text\" class=\"form-control\" ng-model=\"dareForm.title\" placeholder=\"Name of Task\">\n                  </div>\n                </div>\n            </div>\n          </div>\n\n          <div class=\"card\">\n            <div class=\"item item-input-inset\">\n                <textarea class=\"full_width\" ng-model=\"dareForm.descr\" placeholder=\"Describe why it is important...\"></textarea>\n            </div>\n          </div>\n\n          <div class=\"card\">\n            <div class=\"item item-input-inset\">\n              <div class=\"row\">\n                <div class=\"col-40\">\n                  Complete by:\n                </div>\n                <div class=\"col-60\">\n                  <button class=\"button-clear button-balanced\" ng-model=\"dareForm.date\" ng-click=\"dare.showDatePicker()\"> {{dare.date | date:\'dd MMMM yyyy\'}}</button>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"form-group\">\n            <input type=\"text\" class=\"form-control\" ng-model=\"dare.newItem.name\" placeholder=\"Name\">\n          </div>\n\n          <button type=\"submit\" class=\"btn btn-default\">Add</button>\n        </form>\n      </div>\n\n    <ion-list>\n      <div class=\"card\" ng-repeat=\"card in dare.items |filter:user.uid\">\n\n        <div class=\"item item-text-wrap\">\n          {{card.name}}\n        </div>\n        <div class=\"item item-divider\">\n          <a ng-click=\"dare.removeItem(card)\">Remove</a>\n        </div>\n      </div>\n    </ion-list>\n  </ion-content>\n</ion-view>\n");
$templateCache.put("tab-dash.html","<ion-view view-title=\"Get Daring !\">\n  <ion-content>\n\n    <div class=\"item item-avatar\">\n      <img ng-src=\"{{authData.facebook.cachedUserProfile.picture.data.url}}\">\n      <h2>{{authData.facebook.displayName}}</h2>\n    </div>\n\n    <div class=\"item item-body\">\n\n      <!--Add Dare Button-->\n      <div class=\"card\">\n        <div class=\"item item-text-wrap\">\n          <a class=\"item item-icon-left\" ng-click=\"dash.addDare()\">\n            <i class=\"ion-android-add-circle\"></i>\n            Add a Dare\n          </a>\n        </div>\n      </div>\n\n      <!--Self Dare Button-->\n      <div class=\"card\">\n        <div class=\"item item-text-wrap\">\n          <a class=\"item item-icon-left\" ng-click=\"dash.selfDares()\">\n            <i class=\"ion-ios-bolt\"></i>\n            Dare for Self\n            <span class=\"badge badge-assertive\">{{count}}</span>\n          </a>\n        </div>\n      </div>\n\n      <div class=\"card\" ng-repeat=\"card in dash.items |filter:user.password.email\" ng-show=\"dash.showSelfDares\">\n        <div class=\"item item-text-wrap\">\n          {{card.name}}\n        </div>\n        <div class=\"item item-divider\">\n          <a ng-click=\"dash.addDare()\">Add</a>\n        </div>\n        <div class=\"item item-divider\">\n          <a ng-click=\"dash.removeItem(card)\">Remove</a>\n        </div>\n      </div>\n\n        <!--Group Dare Button-->\n      <div class=\"card\">\n        <div class=\"item item-text-wrap\">\n          <a class=\"item item-icon-left\" ui-sref=\"tab.dare_group\">\n            <i class=\"ion-ios-bolt\"></i>\n            Dare for Group\n          </a>\n        </div>\n      </div>\n    </div>\n  </ion-content>\n</ion-view>\n\n\n\n");
$templateCache.put("tabs.html","<!--\nCreate tabs with an icon and label, using the tabs-positive style.\nEach tab\'s child <ion-nav-view> directive will have its own\nnavigation history that also transitions its views in and out.\n-->\n<ion-tabs class=\"tabs-icon-top tabs-positive\">\n\n  <!-- Dashboard Tab -->\n  <ion-tab title=\"Dares\" icon-off=\"ion-ios-pulse\" icon-on=\"ion-ios-pulse-strong\" href=\"#/tab/dash\">\n    <ion-nav-view name=\"tab-dash\"></ion-nav-view>\n  </ion-tab>\n\n  <!-- Chats Tab -->\n  <ion-tab title=\"Chats\" icon-off=\"ion-ios-chatboxes-outline\" icon-on=\"ion-ios-chatboxes\" href=\"#/tab/chats\">\n    <ion-nav-view name=\"tab-chats\"></ion-nav-view>\n  </ion-tab>\n\n  <!-- Account Tab -->\n  <ion-tab title=\"Account\" icon-off=\"ion-ios-gear-outline\" icon-on=\"ion-ios-gear\" href=\"#/tab/account\">\n    <ion-nav-view name=\"tab-account\"></ion-nav-view>\n  </ion-tab>\n\n\n</ion-tabs>\n");
$templateCache.put("welcome.html","<ion-pane id=\"welcome\" class=\"welcomePane\">\n    <h1 class=\"title\">Dare to Take the first step to changing your life!!</h1>\n\n   <ion-footer-bar>\n    <a class=\"full_width button button-assertive\" ui-sref=\"login\">\n     Lets Go !!\n   </a>\n   </ion-footer-bar>\n\n</ion-pane>\nnp\n");}]);
(function(){
  'use strict';

  angular.module('app.landing', [])

    .controller('landingCtrl' , function() {


    })

}());

(function(){
  'use strict';

  angular.module('app.register', [])

    .controller('registerCtrl', function($scope, Auth, firebaseData, $state){

      $scope.usersData = firebaseData.getUsers();

     this.addUser = function(email, pwd, name) {
       //console.log(this.user);
       //registerUserService.createUser(this.user).then(function(response) {
       //    console.log("You got to the place ", response);
       //})
       Auth.$createUser({
         email: email,
         password: pwd
       }).then(function (userData) {
         console.log("User " + userData.uid + " created successfully!");
         $scope.isNewUser = true;
         $scope.name = name;
         return Auth.$authWithPassword({
           email: email,
           password: pwd
         });
       }).then(function (authData) {
         console.log("Logged in as:", authData.uid);
         $scope.usersData.child(authData.uid).set({
           userId: authData.uid,
           provider: authData.provider,
           name: name
           //some more user data
         });
         $state.go('tab.dash');
       }).catch(function (error) {
         console.error("Error: ", error);
       });
     };

       Auth.$onAuth(function(authData) {

         //if (authData &&  $scope.isNewUser) {
         //  var name = $scope.name;
         //  // save the user's profile into Firebase so we can list users,
         //  // use them in Security and Firebase Rules, and show profiles
         //  $scope.usersData.child(authData.uid).set({
         //    userId: authData.uid,
         //    provider: authData.provider,
         //    name: name
         //    //some more user data
         //  });
         //  $scope.isNewUser = false;
         //}

         if (authData === null) {
           console.log('Not logged in yet');
         } else {
           console.log('Logged in as', authData.uid);
           //  $location.path("/profile");
         }
         // This will display the user's name in our view
         $scope.authData = authData;
         console.log('authData', $scope.authData);
       });

    })

    .service('registerUserService', ['$http', '$location', function($http, $location){
      this.createUser = function(user) {
        var data = user;
        $http({
          url: 'http://localhost:3000/user/signup',
          method: 'POST',
          data: data,
        })
          .then(function(data, status, headers, config){
            console.log('Success!');
            return data;
            // called when the data is available
          },
          function(data, status, headers, config) {
            console.log('Failure :(');
            // called when an error occurs or
            // the server returns data with an error status
          });
      };
     }])

}());

(function(){
  'use strict';

  angular.module('app.login', ['ngCordova'])

     .controller('loginCtrl'  , function($scope, $state, Auth, firebaseData){

       $scope.user = Auth.$getAuth();
       $scope.usersData = firebaseData.getUsers();
       $scope.isNewFBUser = false;
       if ($scope.user) {
        console.log($scope.user);
       }

      this.facebook = function() {
          Auth.$authWithOAuthPopup("facebook").then(function(authData){
            $scope.isNewFBUser = true;
            console.log(authData);
            $state.go('tab.dash');
          }).catch(function(error){
            console.error(error);
          },{
            remember: "sessionOnly",
            scope: "email,user_likes"
          });

        };

          this.emailLogin = function(email, pwd) {

            Auth.$authWithPassword({
              email    : email,
              password : pwd
            }).then(function(authData) {
              console.log(authData);
              $state.go('tab.dash');
            }).catch(function(error) {
              console.log(error);
            });
          };


       this.logout = function (){

         Auth.$unauth();

       };

        Auth.$onAuth(function(authData) {

          if (authData && $scope.isNewFBUser) {
            // save the user's profile into Firebase so we can list users,
            // use them in Security and Firebase Rules, and show profiles
            $scope.usersData.child(authData.uid).set({
              userId: authData.uid,
              provider: authData.provider,
              name: authData.facebook.displayName
            });
            $scope.isNewFBUser = false;
          }

          if (authData === null) {
            console.log('Not logged in yet');
          } else {
            console.log('Logged in as', authData.uid);
          //  $location.path("/profile");
          }
          // This will display the user's name in our view
          $scope.authData = authData;
          console.log('authData', $scope.authData);
        });
  })

    .service('loginUserService', ['$http', '$location', function($http, $location){
      this.userInfo = function() {
       $http({
          url: 'http://localhost:3000/auth/facebook',
          method: 'GET'
         })
          .then(function(data, status, headers, config){
            console.log('Success!');
            return data;
            // called when the data is available
          },
          function(data, status, headers, config) {
            console.log('Failure :(');
            return data;
            // called when an error occurs or
            // the server returns data with an error status
          });
      };
    }]);

}());

(function(){
  'use strict';

 angular.module('app.profile', ['ngCordova'])

.controller('profileCtrl', '$http', '$localStorage', '$locationfunction', 'auth', function( $http, $localStorage, $location, auth) {
 // this.auth = auth;
  this.init = function() {
    if($localStorage.hasOwnProperty("accessToken") === true) {
      $http.get("https://graph.facebook.com/v2.5/me", { params: { access_token: $localStorage.accessToken, fields: "id,name,gender,location,website,picture,relationship_status", format: "json" }}).then(function(result) {
        this.profileData = result.data;
      }, function(error) {
        alert("There was a problem getting your profile.  Check the logs for details.");
        console.log(error);
      });
    } else {
      alert("Not signed in");
      $location.path("/login");
    }
  };

});


}());

(function () {
  //'use strict';

  angular.module('app')
    .config(['$stateProvider', '$urlRouterProvider','authProvider','$locationProvider', '$httpProvider','jwtInterceptorProvider', Config])

    .run(function($rootScope, auth, store) {
      $rootScope.$on('$locationChangeStart', function() {
        if (!auth.isAuthenticated) {
          var token = store.get('token');
          if (token) {
            auth.authenticate(store.get('profile'), token);
          }
        }

      });
    })

      function Config($stateProvider, $urlRouterProvider, authProvider, $locationProvider, $httpProvider, jwtInterceptorProvider) {

        $stateProvider

        // setup an abstract state for the tabs directive
        //  .state('welcome', {
        //    url: '/',
        //    controller: 'welcomeCtrl',
        //    templateUrl: 'welcome.html',
        //    controllerAs: 'welcome'
        //  })

          .state('register', {
            url: '/register',
            controller: 'registerCtrl as register',
            templateUrl: 'register.html',
          })

          .state('login', {
            url: '/login',
            controller: 'loginCtrl as login',
            templateUrl: 'login.html',
          })

          //.state('landing', {
          //  url: '/landing',
          //  controller: 'landingCtrl as landing',
          //  templateUrl: 'landing.html'
          //})
          //
          //.state('profile', {
          //  url: '/profile',
          //  controller: 'profileCtrl as profile',
          //  templateUrl: 'profile.html'
          //})

          // setup an abstract state for the tabs directive
          .state('tab', {
            url: "/tab",
            abstract: true,
            templateUrl: "tabs.html",
            // The tab requires user login
            //data: {
            //  requiresLogin: true
            //}
          })

          // Each tab has its own nav history stack:

          .state('tab.dash', {
            url: '/dash',
            views: {
              'tab-dash': {
                templateUrl: 'tab-dash.html',
                controller: 'DashCtrl as dash'
              }
            }
          })

          .state('tab.dare', {
            url:'/dash/dare',
            views: {
              'tab-dash': {
                templateUrl : 'tab-dare.html',
                controller: 'DareCtrl as dare'
              }
            }
          })

          //.state('tab.group', {
          //  url:'/dash/group',
          //  views: {
          //    'tab-self': {
          //      templateUrl : 'tab-group.html',
          //      controller: 'GroupCtrl as group'
          //    }
          //  }
          //})

          .state('tab.chats', {
            url: '/chats',
            views: {
              'tab-chats': {
                templateUrl: 'tab-chats.html',
                controller: 'ChatsCtrl as chats'
              }
            }
          })
          //.state('tab.chat-detail', {
          //  url: '/chats/:chatId',
          //  views: {
          //    'tab-chats': {
          //      templateUrl: 'chat-detail.html',
          //      controller: 'ChatDetailCtrl as chatDet'
          //    }
          //  }
          //})

          .state('tab.account', {
            url: '/account',
            views: {
              'tab-account': {
                templateUrl: 'tab-account.html',
                controller: 'AccountCtrl as account'
              }
            }
          });

        // if none of the above states are matched, use this as the fallback
        $urlRouterProvider.otherwise('/login');


        authProvider.init({
          domain: 'dkapp.auth0.com',
          clientID: '0NF0PCmamT2ndVAq4lqdV1znp5Oaf91w',
          loginState: 'login' // This is the name of the state where you'll show the login, which is defined above...
        });


        jwtInterceptorProvider.tokenGetter = function(store, jwtHelper, auth) {
          var idToken = store.get('token');
          var refreshToken = store.get('refreshToken');
          if (!idToken || !refreshToken) {
            return null;
          }
          if (jwtHelper.isTokenExpired(idToken)) {
            return auth.refreshIdToken(refreshToken).then(function(idToken) {
              store.set('token', idToken);
              return idToken;
            });
          } else {
            return idToken;
          }
        }
           $httpProvider.interceptors.push('jwtInterceptor');
      }
}());

(function(){
  'use strict';


  angular.module('app.tabs', ['firebase'])

  //  The Dashboard controller
  .controller('DashCtrl', function($scope,brainDareService, $state, Auth, firebaseData) {

    $scope.user = brainDareService.getUser();
    this.showSelfDares = false;

    Auth.$onAuth(function(authData) {

      if (authData === null) {
        console.log('Not logged in yet');
      } else {
        console.log('Logged in as', authData.uid);
        console.log('User info : ', $scope.user);
      }
      // This will display the user's name in our view
      $scope.authData = authData;
    });

    this.selfDares = function(){
      if($scope.count && $scope.count > 0 && !this.showSelfDares){
        this.showSelfDares = true;
      } else if(this.showSelfDares === true){
        this.showSelfDares = false;
      }
    }

    this.addDare = function(){
      $state.go('tab.dare');
    }

    this.items = brainDareService.getItems();

    this.items.$loaded().then(function(dares) {
      console.log(dares.length); // data is loaded here
      $scope.count = dares.length;
    });

    this.removeItem = function (id) {
      brainDareService.removeItem(id);
    };

  })

  //  The Dare Form Controller

  .controller('DareCtrl', function($scope, brainDareService){
    this.date = new Date();
    this.showDatePicker = function($event) {
      var options = {
        date: this.date,
        mode: 'date'
      };
      datePicker.show(options, function(date){
        if(date != 'Invalid Date') {
          console.log("Date came" + date);
        } else {
          console.log(date);
        }
      });
      $event.stopPropagation();
    };

    $scope.user = brainDareService.getUser();

    this.currentItem = null;

    this.items = brainDareService.getItems();

    this.addItem = function () {
      this.newItem = {
                        by: $scope.user.uid,
                        name: '',
                        type:'self',

                    };
      brainDareService.addItem(angular.copy(this.newItem));

    };

    this.updateItem = function (id) {
      brainDareService.updateItem(id);
    };

    this.removeItem = function (id) {
      brainDareService.removeItem(id);
    };
  })


  .controller('ChatsCtrl', function($scope) {

  })


  //  The Account Settings controller

  .controller('AccountCtrl', function($scope, $state, Auth) {

      this.logout = function (){
        Auth.$unauth();
        $state.go('login');
      }
  })

  //  Common service with the CRUD for user dares

  .factory('brainDareService', function($firebaseArray, FIREBASE_URI) {

    var ref = new Firebase(FIREBASE_URI);
    var dares = ref.child('dares');
    var items = $firebaseArray(dares);
    var user = ref.getAuth();

    var getUser = function(){
      return user;
    };

     var getItems = function() {
      return items;
    };

    var numChildren = function(){
      return dares.numChildren();
    };

    var addItem = function(item) {
      return items.$add(item);
    };

    var updateItem = function(id) {
      return items.$save(id);
    };

    var removeItem = function(id) {
      return items.$remove(id);
    };

    return {
      getItems : getItems,
      getUser : getUser,
      numChildren: numChildren,
      addItem : addItem,
      updateItem : updateItem,
      removeItem : removeItem
    }

  })

}());

(function() {
  'use strict';
  angular.module('ionic.utils', [])

    .factory('$localstorage', ['$window', function ($window) {
      return {
        set: function (key, value) {
          $window.localStorage[key] = value;
        },
        get: function (key, defaultValue) {
          return $window.localStorage[key] || defaultValue;
        },
        setObject: function (key, value) {
          $window.localStorage[key] = JSON.stringify(value);
        },
        getObject: function (key) {
          return JSON.parse($window.localStorage[key] || '{}');
        }
      }
    }]);

}());

(function () {
  //'use strict';

  angular.module('app.welcome', [])

    .controller('welcomeCtrl' , function(){

      console.log('Hi Welcome');
    })



}());
