angular.module('app',
  [
    'ionic',
    'ngCordova',
    'base64',
    'ionic-material',
    'ionic.service.core',
    'ionic.service.push',
    'firebase',
    'templates',
    'app.welcome',
    'app.register',
    'app.login',
    'app.profile',
    'app.landing',
    'app.tabs'
  ])

  .config(function($ionicAppProvider) {
    $ionicAppProvider.identify({
      app_id: 'b90389e8',
      api_key: 'ad1b4c020a434289985ae0e41ce7034178893c4b93bd9ea4',
      dev_push: true
    });
  })

  .run(function($ionicPlatform, $http, $base64) {
    $http.defaults.headers.post['Authorization'] = 'Basic ' + $base64.encode('15fc98fdd99c51bdfb62cc3310d26dc145a5195f04c76fac' + ':' + '');

    $ionicPlatform.ready(function() {
      // Hide the accessory bar by default (remove this to show the accessory bar above the keyboard
      // for form inputs)
      if(window.cordova && window.cordova.plugins.Keyboard) {
        cordova.plugins.Keyboard.hideKeyboardAccessoryBar(true);
      }

      if(window.StatusBar) {
        // org.apache.cordova.statusbar required
        StatusBar.styleDefault();
      }

      var push = new Ionic.Push({
        "debug": true
      });

      push.register(function(token) {
        console.log("Device token:",token.token);
      });
      //
      //if(device && device.platform === "iOS") {
      //  window.plugin.notification.local.promptForPermission();
      //}

      window.plugin.notification.local.onadd = function (id, state, json) {
        var notification = {
          id: id,
          state: state,
          json: json
        };
        $timeout(function() {
          $rootScope.$broadcast("$cordovaLocalNotification:added", notification);
        });
      };

    });
  })




  .factory('Auth', function($firebaseAuth) {
    var endPoint = 'https://boiling-heat-1945.firebaseio.com';
    var usersRef = new Firebase(endPoint);
    return $firebaseAuth(usersRef);
  })

  .factory('firebaseData', function($firebase, FIREBASE_URI) {
    var ref = new Firebase(FIREBASE_URI);

    var users = function() {
      return ref.child('users');
    }

   var getDares = function(){
     return ref.child('dares');
   }

    return {
      getUsers : users,
      getDares : getDares
    }

  })


.constant('FIREBASE_URI', 'https://boiling-heat-1945.firebaseio.com');


var AUTH0_CLIENT_ID='0NF0PCmamT2ndVAq4lqdV1znp5Oaf91w'; 
var AUTH0_DOMAIN='dkapp.auth0.com'; 
var AUTH0_CALLBACK_URL=location.href;
angular.module("templates", []).run(["$templateCache", function($templateCache) {$templateCache.put("chat-detail.html","<!--\n  This template loads for the \'tab.friend-detail\' state (app.js)\n  \'friend\' is a $scope variable created in the FriendsCtrl controller (controllers.js)\n  The FriendsCtrl pulls data from the Friends service (service.js)\n  The Friends service returns an array of friend data\n-->\n<ion-view view-title=\"{{chatDet.chat.name}}\">\n  <ion-content class=\"padding\">\n    <img ng-src=\"{{chatDet.chat.face}}\" style=\"width: 64px; height: 64px\">\n    <p>\n      {{chatDet.chat.lastText}}\n    </p>\n  </ion-content>\n</ion-view>\n");
$templateCache.put("landing.html","<div class=\"list card\">\n\n  <div class=\"item item-avatar\">\n    <img src=\"avatar.jpg\">\n    <h2>Pretty Hate Machine</h2>\n    <p>Nine Inch Nails</p>\n  </div>\n\n  <div class=\"item item-image\">\n    <img src=\"cover.jpg\">\n  </div>\n\n  <a class=\"item item-icon-left assertive\" href=\"#\">\n    <i class=\"icon ion-music-note\"></i>\n    Start listening\n  </a>\n\n</div>\n");
$templateCache.put("login.html","<ion-view hide-nav-bar=\"true\" style=\"overflow-y: hidden;\">\n  <ion-content class=\"blue\">\n    <!--style=\"background-image: url(\'./img/bdIcon.png\');\"-->\n    <div class=\"ionic login \" >\n      <div class=\"hero no-header flat\">\n        <div class=\"content\">\n          <i class=\"ion-map icon hero-icon royal-bg\"></i>\n          <h1>Brain Dare</h1>\n        </div>\n      </div>\n      <div class=\"list\">\n        <label class=\"item item-input item-md-label\" placeholder=\"Username\" highlight-color=\"balanced\" type=\"text\"><input type=\"text\" ng-model=\"login.email\"><span class=\"input-label\">Username</span><div class=\"highlight highlight-balanced\"></div></label>\n        <label class=\"item item-input item-md-label\" placeholder=\"Password\" highlight-color=\"energized\" type=\"password\"><input type=\"password\" ng-model=\"login.pwd\"><span class=\"input-label\">Password</span><div class=\"highlight highlight-energized\"></div></label>\n      </div>\n      <div class=\"padding\">\n        <button class=\"button button-block cyan white_text waves-effect waves-button waves-light\" ng-click=\"login.emailLogin(login.email, login.pwd)\">Login</button>\n      </div>\n      <div class=\"padding divider\">\n        <h6><span>or</span></h6>\n      </div>\n      <div class=\"button-bar\">\n        <a class=\"button button-small button-outline button-balanced white light-bg waves-effect waves-button waves-light white_text\" ui-sref=\"register\"> Sign In </a>\n        <button class=\"button button-small button-outline button-positive white light-bg icon-left ion-social-facebook waves-effect waves-button waves-light\" ng-click=\"login.facebook()\">Facebook</button>\n      </div>\n    </div>\n\n  </ion-content>\n</ion-view>\n");
$templateCache.put("profile.html","<ion-view title=\"Profile\" ng-init=\"init()\">\n  <ion-content>\n    <div class=\"list card\">\n      <div class=\"item item-avatar\">\n        <img ng-src=\"{{profile.profileData.picture.data.url}}\">\n        <h2>{{profile.profileData.name}}</h2>\n        <p>{{profile.profileData.id}}</p>\n      </div>\n      <a href=\"#\" class=\"item item-icon-left\">\n        <i class=\"icon ion-earth\"></i>\n        {{profile.profileData.website}}\n      </a>\n      <a href=\"#\" class=\"item item-icon-left\">\n        <i class=\"icon ion-home\"></i>\n        {{profile.profileData.location.name}}\n      </a>\n      <a href=\"#\" class=\"item item-icon-left\">\n        <i class=\"icon ion-heart\"></i>\n        {{profile.profileData.relationship_status}}\n      </a>\n    </div>\n    <!-- user-info.tpl.html -->\n    <span>Name is {{auth.profile.nickname}}</span>\n  </ion-content>\n</ion-view>\n");
$templateCache.put("register.html","<ion-view view-title=\"Get Started!\">\n  <ion-content>\n    <!--<button class=\"button button-energized\" ng-click=\"addImage()\">-->\n      <!--Add image-->\n    <!--</button><br><br>-->\n      <!--<img ng-repeat=\"image in images\" ng-src=\"{{urlForImage(image)}}\" height=\"200px\"/>-->\n\n<form novalidate>\n\n  <div class=\"list\">\n    <label class=\"item item-input item-floating-label\">\n      <span class=\"input-label\">Name</span>\n      <input type=\"text\" placeholder=\"John Doe\" ng-model=\"name\">\n    </label>\n    <label class=\"item item-input item-floating-label\">\n      <span class=\"input-label\">Email</span>\n      <input type=\"text\" placeholder=\"example@email.com\" ng-model=\"email\">\n    </label>\n    <label class=\"item item-input item-floating-label\">\n      <span class=\"input-label\">Password</span>\n      <input type=\"password\" placeholder=\"Password\" ng-model=\"pwd\">\n    </label>\n  </div>\n  <div class=\"padding\">\n    <button  class=\"button button-block button-positive\" ng-click=\"register.addUser(email,pwd, name)\">Create Greatness</button>\n   </div>\n\n</form>\n\n</ion-content>\n\n</ion-view>\n\n");
$templateCache.put("tab-account.html","<ion-view view-title=\"Account\">\n  <ion-content>\n    <button class=\"button button-positive button-block\" ng-click=\"account.logout()\">\n    Logout\n    </button>\n\n    <button class=\"button button-block button-dark\" ng-click=\"account.identifyUser()\">\n      Identify a user\n    </button>\n\n    <button class=\"button button-block button-positive\" ng-if=\"identified\" ng-click=\"account.pushRegister()\">\n      Register for Push\n    </button>\n\n    <button class=\"button\" ng-click=\"account.add()\">Add notification</button>\n    <button class=\"button\" ng-click=\"account.isScheduled()\">Is Scheduled</button>\n  </ion-content>\n</ion-view>\n");
$templateCache.put("tab-chats.html","<ion-view view-title=\"Chats\">\n  <ion-content>\n    <ion-list>\n      <ion-item class=\"item-remove-animate item-avatar item-icon-right\" ng-repeat=\"chat in chats.chats\" type=\"item-text-wrap\" href=\"#/tab/chats/{{chats.chat.id}}\">\n        <img ng-src=\"{{chats.chat.face}}\">\n        <h2>{{chats.chat.name}}</h2>\n        <p>{{chats.chat.lastText}}</p>\n        <i class=\"icon ion-chevron-right icon-accessory\"></i>\n\n        <ion-option-button class=\"button-assertive\" ng-click=\"chats.remove(chat)\">\n          Delete\n        </ion-option-button>\n      </ion-item>\n    </ion-list>\n  </ion-content>\n</ion-view>\n");
$templateCache.put("tab-dare.html","<ion-view title=\"Dare on\">\n  <ion-content>\n      <div class=\"well\">\n        <ion-nav-buttons side=\"left\">\n          <button class=\"button\" ng-click=\"$ionicGoBack($event)\"><i class=\"ion-arrow-left-c\"></i> Back</button>\n        </ion-nav-buttons>\n\n        <form class=\"form-inline\" name=\"dareForm\" role=\"form\" novalidate>\n          <div class=\"card\">\n            <div class=\"item item-input-inset\">\n                <div class=\"row\">\n                  <div class=\"col-25\">\n                    <i class=\"assertive ion-ios-heart\"></i>\n                  </div>\n                  <div class=\"col-75\">\n                    <input type=\"text\" class=\"form-control\" ng-model=\"dare.taskName\" placeholder=\"Name of Task\">\n                  </div>\n                </div>\n            </div>\n          </div>\n\n          <div class=\"card\">\n            <div class=\"item item-input-inset\">\n                <textarea class=\"full_width\" ng-model=\"dare.taskDescr\" placeholder=\"Describe why it is important...\"></textarea>\n            </div>\n          </div>\n\n          <div class=\"card\">\n            <div class=\"item item-input item-select\">\n              <div class=\"input-label\">\n                Complete By:\n              </div>\n               <button class=\"button-clear button-block button-balanced icon-right ion-android-calendar\" ng-model=\"complete\" ng-click=\"dare.showDatePicker()\">\n                 {{complete | date:\'dd MMMM yyyy\'}}\n               </button>\n            </div>\n          </div>\n\n          <div class=\"card\">\n            <div class=\"item item-input item-select\">\n              <div class=\"input-label\">\n                Remind Me Every:\n              </div>\n              <select ng-options=\"remind.name for remind in dare.remindMeOptions track by remind.id\" ng-model=\"dare.remindSelected\">\n              </select>\n            </div>\n          </div>\n\n          <div class=\"card\">\n            <div class=\"item item-input-inset\">\n\n              <button class=\"button button-block button-balanced\"  ng-click=\"dare.addDare()\">Add Me</button>\n\n            </div>\n          </div>\n      </form>\n      </div>\n  </ion-content>\n</ion-view>\n");
$templateCache.put("tab-dash.html","<ion-view view-title=\"Get Daring !\">\n  <ion-content class=\"expanded\">\n\n      <div id=\"profile-bg\"></div>\n          <div id=\"content\">\n            <div id=\"profile-info\">\n              <img id=\"profile-image\" ng-src=\"{{authData.facebook.cachedUserProfile.picture.data.url}}\">\n              <h3 id=\"profile-name\">Welcome {{authData.facebook.displayName}} !</h3>\n                <span id=\"profile-description\">{{quote}}</span>\n            </div>\n          </div>\n\n    <!--<div class=\"item item-avatar\">-->\n      <!--<img ng-src=\"{{authData.facebook.cachedUserProfile.picture.data.url}}\">-->\n      <!--<h2>{{authData.facebook.displayName}}</h2>-->\n      <!--<div class=\"item item-text-wrap\">-->\n        <!--{{quote}}-->\n      <!--</div>-->\n    <!--</div>-->\n\n    <div class=\"item item-body\">\n\n      <!--Add Dare Button-->\n      <div class=\"list card balanced-bg\">\n        <div class=\"item item-text-wrap\">\n          <a class=\"item item-icon-left \" ng-click=\"dash.addDare()\">\n            <i class=\"ion-android-add-circle\"></i>\n            Add a Dare\n          </a>\n        </div>\n      </div>\n\n      <ion-list class=\"item card-item\" show-delete=\"false\" can-swipe=\"true\" ng-repeat=\"card in dash.items |filter:uid\">\n        <ion-item href=\"#\" class=\"daresList\">\n          <div ui-sref=\"app.gallery\" class=\"card stable-bg ink ink-dark\">\n            <div class=\"item item-avatar item-text-wrap\">\n              <span class=\"avatar\"> <i class=\"assertive ion-ios-heart\"></i></span>\n              <strong> {{card.taskName}} </strong>\n              <div class=\"card-footer\">\n                <div class=\"pull-left\">\n                  {{card.taskDescr}}\n                </div>\n              </div>\n            </div>\n          </div>\n          <ion-option-button class=\"button-light icon ion-heart\"></ion-option-button>\n          <ion-option-button class=\"button-light icon ion-email\"></ion-option-button>\n          <ion-option-button class=\"button-assertive icon ion-trash-a\" ng-click=\"dash.removeItem(card)\"></ion-option-button>\n        </ion-item>\n      </ion-list>\n\n      <!--<div class=\"item card-item\" ng-repeat=\"card in dash.items |filter:uid\">-->\n        <!--<div ui-sref=\"app.gallery\" class=\"card stable-bg ink ink-dark\">-->\n          <!--<div class=\"item item-avatar item-text-wrap\">-->\n            <!--<span class=\"avatar\"> <i class=\"assertive ion-ios-heart\"></i></span>-->\n            <!--<strong> {{card.taskName}} </strong>-->\n              <!--<div class=\"card-footer text-right\">-->\n               <!--<div class=\"pull-left\">-->\n                  <!--{{card.taskDescr}}-->\n                <!--</div>-->\n              <!--</div>-->\n          <!--</div>-->\n        <!--</div>-->\n      <!--</div>-->\n\n      <!--<div class=\"card\" ng-repeat=\"card in dash.items |filter:uid\" >-->\n        <!--&lt;!&ndash;ng-show=\"dash.showSelfDares\"&ndash;&gt;-->\n        <!--<div class=\"item item-text-wrap\">-->\n          <!--{{card.taskName}}-->\n        <!--</div>-->\n        <!--<div class=\"item item-text-wrap\">-->\n          <!--{{card.taskDescr}}-->\n        <!--</div>-->\n        <!--<div class=\"item item-divider\">-->\n          <!--<a ng-click=\"dash.addDare()\">Add</a>-->\n        <!--</div>-->\n        <!--<div class=\"item item-divider\">-->\n          <!--<a ng-click=\"dash.removeItem(card)\">Remove</a>-->\n        <!--</div>-->\n      <!--</div>-->\n\n        <!--Group Dare Button-->\n      <!--<div class=\"card\">-->\n        <!--<div class=\"item item-text-wrap\">-->\n          <!--<a class=\"item item-icon-left\" ui-sref=\"tab.dare_group\">-->\n            <!--<i class=\"ion-ios-bolt\"></i>-->\n            <!--Dare for Group-->\n          <!--</a>-->\n        <!--</div>-->\n      <!--</div>-->\n\n    </div>\n  </ion-content>\n</ion-view>\n\n\n\n");
$templateCache.put("tabs.html","<!--\nCreate tabs with an icon and label, using the tabs-positive style.\nEach tab\'s child <ion-nav-view> directive will have its own\nnavigation history that also transitions its views in and out.\n-->\n<ion-tabs class=\"tabs-icon-top tabs-positive\">\n\n  <!-- Dashboard Tab -->\n  <ion-tab title=\"Dares\" icon-off=\"ion-ios-pulse\" icon-on=\"ion-ios-pulse-strong\" href=\"#/tab/dash\">\n    <ion-nav-view name=\"tab-dash\"></ion-nav-view>\n  </ion-tab>\n\n  <!-- Chats Tab -->\n  <ion-tab title=\"Chats\" icon-off=\"ion-ios-chatboxes-outline\" icon-on=\"ion-ios-chatboxes\" href=\"#/tab/chats\">\n    <ion-nav-view name=\"tab-chats\"></ion-nav-view>\n  </ion-tab>\n\n  <!-- Account Tab -->\n  <ion-tab title=\"Account\" icon-off=\"ion-ios-gear-outline\" icon-on=\"ion-ios-gear\" href=\"#/tab/account\">\n    <ion-nav-view name=\"tab-account\"></ion-nav-view>\n  </ion-tab>\n\n\n</ion-tabs>\n");
$templateCache.put("welcome.html","<ion-pane id=\"welcome\" class=\"welcomePane\">\n    <h1 class=\"title\">Dare to Take the first step to changing your life!!</h1>\n\n   <ion-footer-bar>\n    <a class=\"full_width button button-assertive\" ui-sref=\"login\">\n     Lets Go !!\n   </a>\n   </ion-footer-bar>\n\n</ion-pane>\nnp\n");}]);
(function(){
  'use strict';

  angular.module('app.login', ['ngCordova'])

     .controller('loginCtrl'  , function($scope, $state, Auth, firebaseData, ionicMaterialInk, ionicMaterialMotion){


       ionicMaterialInk.displayEffect();

       ionicMaterialMotion.ripple();

       $scope.user = Auth.$getAuth();
       $scope.usersData = firebaseData.getUsers();
       $scope.isNewFBUser = false;
       if ($scope.user) {
        console.log($scope.user);
       }

      this.facebook = function() {
          Auth.$authWithOAuthPopup("facebook").then(function(authData){
            $scope.isNewFBUser = true;
            console.log(authData);
            $state.go('tab.dash');
          }).catch(function(error){
            console.error(error);
          },{
           // remember: "sessionOnly",
            scope: "email,user_likes"
          });

        };

          this.emailLogin = function(email, pwd) {

            Auth.$authWithPassword({
              email    : email,
              password : pwd
            }).then(function(authData) {
              console.log(authData);
              $state.go('tab.dash');
            }).catch(function(error) {
              console.log(error);
            });
          };


       this.logout = function (){

         Auth.$unauth();

       };

        Auth.$onAuth(function(authData) {

          if (authData && $scope.isNewFBUser) {
            // save the user's profile into Firebase so we can list users,
            // use them in Security and Firebase Rules, and show profiles
            $scope.usersData.child(authData.uid).set({
              userId: authData.uid,
              provider: authData.provider,
              name: authData.facebook.displayName
            });
            $scope.isNewFBUser = false;
          }

          if (authData === null) {
            console.log('Not logged in yet');
          } else {
            console.log('Logged in as', authData.uid);
          //  $location.path("/profile");
          }
          // This will display the user's name in our view
          $scope.authData = authData;
          console.log('authData', $scope.authData);
        });
  })

    .service('loginUserService', ['$http', '$location', function($http, $location){
      this.userInfo = function() {
       $http({
          url: 'http://localhost:3000/auth/facebook',
          method: 'GET'
         })
          .then(function(data, status, headers, config){
            console.log('Success!');
            return data;
            // called when the data is available
          },
          function(data, status, headers, config) {
            console.log('Failure :(');
            return data;
            // called when an error occurs or
            // the server returns data with an error status
          });
      };
    }]);

}());

(function(){
  'use strict';

 angular.module('app.profile', ['ngCordova'])

.controller('profileCtrl', '$http', '$localStorage', '$locationfunction', 'auth', function( $http, $localStorage, $location, auth) {
 // this.auth = auth;
  this.init = function() {
    if($localStorage.hasOwnProperty("accessToken") === true) {
      $http.get("https://graph.facebook.com/v2.5/me", { params: { access_token: $localStorage.accessToken, fields: "id,name,gender,location,website,picture,relationship_status", format: "json" }}).then(function(result) {
        this.profileData = result.data;
      }, function(error) {
        alert("There was a problem getting your profile.  Check the logs for details.");
        console.log(error);
      });
    } else {
      alert("Not signed in");
      $location.path("/login");
    }
  };

});


}());

(function(){
  'use strict';

  angular.module('app.landing', [])

    .controller('landingCtrl' , function() {


    })

}());

(function () {
  //'use strict';

  angular.module('app')
    .config(['$stateProvider', '$urlRouterProvider','$locationProvider', '$httpProvider', Config])

    //.run(function($rootScope, auth, store) {
    //  $rootScope.$on('$locationChangeStart', function() {
    //    if (!auth.isAuthenticated) {
    //      var token = store.get('token');
    //      if (token) {
    //        auth.authenticate(store.get('profile'), token);
    //      }
    //    }
    //
    //  });
    //})

      function Config($stateProvider, $urlRouterProvider, $locationProvider, $httpProvider) {

        $stateProvider

          .state('register', {
            url: '/register',
            controller: 'registerCtrl as register',
            templateUrl: 'register.html',
          })

          .state('login', {
            url: '/login',
            controller: 'loginCtrl as login',
            templateUrl: 'login.html',
         })

          //.state('landing', {
          //  url: '/landing',
          //  controller: 'landingCtrl as landing',
          //  templateUrl: 'landing.html'
          //})
          //
          //.state('profile', {
          //  url: '/profile',
          //  controller: 'profileCtrl as profile',
          //  templateUrl: 'profile.html'
          //})

          // setup an abstract state for the tabs directive
          .state('tab', {
            url: "/tab",
            abstract: true,
            templateUrl: "tabs.html",
            // The tab requires user login
            //data: {
            //  requiresLogin: true
            //}
          })

          // Each tab has its own nav history stack:

          .state('tab.dash', {
            url: '/dash',
            views: {
              'tab-dash': {
                templateUrl: 'tab-dash.html',
                controller: 'DashCtrl as dash'
              }
            }
          })

          .state('tab.dare', {
            url:'/dash/dare',
            views: {
              'tab-dash': {
                templateUrl : 'tab-dare.html',
                controller: 'DareCtrl as dare'
              }
            }
          })

          //.state('tab.group', {
          //  url:'/dash/group',
          //  views: {
          //    'tab-self': {
          //      templateUrl : 'tab-group.html',
          //      controller: 'GroupCtrl as group'
          //    }
          //  }
          //})

          .state('tab.chats', {
            url: '/chats',
            views: {
              'tab-chats': {
                templateUrl: 'tab-chats.html',
                controller: 'ChatsCtrl as chats'
              }
            }
          })
          //.state('tab.chat-detail', {
          //  url: '/chats/:chatId',
          //  views: {
          //    'tab-chats': {
          //      templateUrl: 'chat-detail.html',
          //      controller: 'ChatDetailCtrl as chatDet'
          //    }
          //  }
          //})

          .state('tab.account', {
            url: '/account',
            views: {
              'tab-account': {
                templateUrl: 'tab-account.html',
                controller: 'AccountCtrl as account'
              }
            }
          });

        // if none of the above states are matched, use this as the fallback
        $urlRouterProvider.otherwise('/login');

      }
}());

(function(){
  'use strict';

  angular.module('app.register', [])

    .controller('registerCtrl', function($scope, Auth, firebaseData, $state){

      $scope.usersData = firebaseData.getUsers();

     this.addUser = function(email, pwd, name) {

       Auth.$createUser({
         email: email,
         password: pwd
       }).then(function (userData) {
         console.log("User " + userData.uid + " created successfully!");
         $scope.isNewUser = true;
         $scope.name = name;
         return Auth.$authWithPassword({
           email: email,
           password: pwd
         });
       }).then(function (authData) {
         console.log("Logged in as:", authData.uid);
         $scope.usersData.child(authData.uid).set({
           userId: authData.uid,
           provider: authData.provider,
           name: name,
           email: email
           //some more user data
         });
         $state.go('tab.dash');
       }).catch(function (error) {
         console.error("Error: ", error);
       });
     };

       Auth.$onAuth(function(authData) {

         //if (authData &&  $scope.isNewUser) {
         //  var name = $scope.name;
         //  // save the user's profile into Firebase so we can list users,
         //  // use them in Security and Firebase Rules, and show profiles
         //  $scope.usersData.child(authData.uid).set({
         //    userId: authData.uid,
         //    provider: authData.provider,
         //    name: name
         //    //some more user data
         //  });
         //  $scope.isNewUser = false;
         //}

         if (authData === null) {
           console.log('Not logged in yet');
         } else {
           console.log('Logged in as', authData.uid);
           //  $location.path("/profile");
         }
         // This will display the user's name in our view
         $scope.authData = authData;
         console.log('authData', $scope.authData);
       });

    })

    .service('registerUserService', ['$http', '$location', function($http, $location){
      this.createUser = function(user) {
        var data = user;
        $http({
          url: 'http://localhost:3000/user/signup',
          method: 'POST',
          data: data,
        })
          .then(function(data, status, headers, config){
            console.log('Success!');
            return data;
            // called when the data is available
          },
          function(data, status, headers, config) {
            console.log('Failure :(');
            // called when an error occurs or
            // the server returns data with an error status
          });
      };
     }])

}());

(function() {
  'use strict';
  angular.module('ionic.utils', [])

    .factory('$localstorage', ['$window', function ($window) {
      return {
        set: function (key, value) {
          $window.localStorage[key] = value;
        },
        get: function (key, defaultValue) {
          return $window.localStorage[key] || defaultValue;
        },
        setObject: function (key, value) {
          $window.localStorage[key] = JSON.stringify(value);
        },
        getObject: function (key) {
          return JSON.parse($window.localStorage[key] || '{}');
        }
      }
    }]);

}());

(function () {
  //'use strict';

  angular.module('app.welcome', [])

    .controller('welcomeCtrl' , function(){

      console.log('Hi Welcome');
    })



}());

(function(){
  'use strict';


  angular.module('app.tabs', ['firebase'])

  //  The Dashboard controller
  .controller('DashCtrl', function($scope,brainDareService, $state, Auth, firebaseData, ionicMaterialInk, ionicMaterialMotion, quotes) {
    this.downArrow = true;

    ionicMaterialInk.displayEffect();

    ionicMaterialMotion.fadeSlideIn();
    quotes.getQuote().then(function(res) {
      console.log('res', res);
      $scope.quote = res;//res.data.contents.quotes[0].quote;
    });

    $scope.user = brainDareService.getUser();
    this.showSelfDares = false;

    this.getQuoteCat = function() {
      quotes.getQuote().then(function(res) {
        console.log('res', res);
        $scope.quote = res;//res.data.contents.quotes[0].quote;
      });
      console.log('this.quote', $scope.quote);
    };


    Auth.$onAuth(function(authData) {

      if (authData === null) {
        console.log('Not logged in yet');
      } else {
        $scope.uid = authData.uid;
        console.log('Logged in as', authData.uid);
        console.log('User info : ', $scope.user);
      }
      // This will display the user's name in our view
      $scope.authData = authData;
    });

    this.selfDares = function(){
      if($scope.count && $scope.count > 0 && !this.showSelfDares){
        this.showSelfDares = true;
        this.downArrow = false;
      } else if(this.showSelfDares === true){
        this.showSelfDares = false;
        this.downArrow = true;
      }
    }

    this.addDare = function(){
      $state.go('tab.dare');
    }

    this.items = brainDareService.getItems();

    this.items.$loaded().then(function(dares) {
      console.log('dares: ' , dares); // data is loaded here
      $scope.count = 0;
      for(var i = 0; i < dares.length; i++){
        if($scope.uid == dares[i].by)
          $scope.count ++;
      }
    });

    this.removeItem = function (id) {
      brainDareService.removeItem(id);
    };

  })

  //  The Dare Form Controller

  .controller('DareCtrl', function($scope, brainDareService){

    this.remindMeOptions = [
      {id:'1', name: '15 minutes'},
      {id:'2', name:'1 hour'},
      {id:'3', name:'day'},
      {id:'4', name:'15 days'},
    ];

    this.remindSelected = this.remindMeOptions[0];


    this.showDatePicker = function(kind, $event) {
        var options = {
          date: new Date(),
          mode: 'datetime', // 'date' or 'time'
          minDate: new Date(),
          allowOldDates: false,
          allowFutureDates: true,
          doneButtonLabel: 'DONE',
          // doneButtonColor: '#F2F3F4',
          cancelButtonLabel: 'CANCEL',
          //  cancelButtonColor: '#000000'
        };

      datePicker.show(options, function(date){
        if(date != 'Invalid Date') {
           $scope.complete = date;
          console.log('this.completeDate',  $scope.complete);
        } else {
          console.log(date);
        }
      });
      $event.stopPropagation();


    };

    this.user = brainDareService.getUser();

    this.currentItem = null;

    this.items = brainDareService.getItems();

    this.addDare = function () {
      this.completeDate = $scope.complete;
      console.log('complete Date before Add', this.completeDate);
      this.newItem = {
        by: this.user.uid,
        taskName: this.taskName,
        taskDescr: this.taskDescr,
        completeDate: this.completeDate.getTime(),
        remindDate: this.remindSelected.name,
        type:'self'
     };
      console.log('complete Date on Add', this.completeDate);
      brainDareService.addItem(angular.copy(this.newItem));

    };

    this.updateItem = function (id) {
      brainDareService.updateItem(id);
    };

    this.removeItem = function (id) {
      brainDareService.removeItem(id);
    };
  })


  .controller('ChatsCtrl', function($scope) {

  })


  //  The Account Settings controller

  .controller('AccountCtrl', function($scope, $state, Auth, $rootScope, $ionicUser, $ionicPush, quotes, $cordovaLocalNotification) {

    this.add = function() {
      var alarmTime = new Date();
      alarmTime.setMinutes(alarmTime.getMinutes() + 1);
      $cordovaLocalNotification.add({
        id: "1234",
        date: alarmTime,
        message: "This is a message",
        title: "This is a title",
        autoCancel: true,
        sound: null
      }).then(function () {
        console.log("The notification has been set");
      });
    };

    this.isScheduled = function() {
      $cordovaLocalNotification.isScheduled("1234").then(function(isScheduled) {
        alert("Notification 1234 Scheduled: " + isScheduled);
      });
    };

    this.logout = function (){
        Auth.$unauth();
        $state.go('login');
    };

      this.identifyUser = function(){
        $scope.user = $ionicUser.get();
        if(!$scope.user.user_id) {
          // Set your user_id here, or generate a random one.
          $scope.user.user_id = $ionicUser.generateGUID();
        };

        // Metadata
        angular.extend($scope.user, {
          name: 'DK',
          bio: 'Author of BrainDare'
        });

        // Identify your user with the Ionic User Service
        $ionicUser.identify($scope.user).then(function(){
          $scope.identified = true;
          console.log('Identified user ' + $scope.user.name + '\n ID ' + $scope.user.user_id);
        });
      };

      this.pushRegister = function() {
        console.log('Ionic Push: Registering user');

        // Register with the Ionic Push service.  All parameters are optional.
        $ionicPush.register({
          canShowAlert: true, //Can pushes show an alert on your screen?
          canSetBadge: true, //Can pushes update app icon badges?
          canPlaySound: true, //Can notifications play a sound?
          canRunActionsOnWake: true, //Can run actions outside the app,
          onNotification: function(notification) {
            // Handle new push notifications here
            console.log('Push Notification result: ', notification);
            return true;
          }
        });
      };

      $rootScope.$on('$cordovaPush:tokenReceived', function(event, data) {
        alert("Successfully registered token " + data.token);
        console.log('Ionic Push: Got token ', data.token, data.platform);
        $scope.token = data.token;
        quotes.getPushNotification($scope.token);
      });
  })

  //  Common service with the CRUD for user dares

  .factory('brainDareService', function($firebaseArray, FIREBASE_URI) {

    var ref = new Firebase(FIREBASE_URI);
    var dares = ref.child('dares');
    var items = $firebaseArray(dares);
    var user = ref.getAuth();

    var getUser = function(){
      return user;
    };

     var getItems = function() {
      return items;
    };

    var numChildren = function(){
      return dares.numChildren();
    };

    var addItem = function(item) {
      return items.$add(item);
    };

    var updateItem = function(id) {
      return items.$save(id);
    };

    var removeItem = function(id) {
      return items.$remove(id);
    };

    return {
      getItems : getItems,
      getUser : getUser,
      numChildren: numChildren,
      addItem : addItem,
      updateItem : updateItem,
      removeItem : removeItem
    }

  })

  .service('quotes', function($http){
    var quote = {};
    this.getQuote = function(){
      return  $http.get('http://quotes.rest/qod.json?category=inspire').then(function(result){
        console.log('quote categories result: ' ,result);
        quote = result.data.contents.quotes[0].quote;
       return quote;
      });
    }

    this.getPushNotification = function(token) {

      var token = token;
      var quote = this.getQuote();
      return $http({
          method: 'POST',
          url: 'https://push.ionic.io/api/v1/push ',
          headers: {
            'Content-Type': 'application/json',
            'X-Ionic-Application-Id': 'b90389e8'
          },
          data: {
            "tokens":[
              token
            ],
            "notification":{
              "alert":quote,
              "ios":{
                "badge":1,
                "sound":"ping.aiff",
                "expiry": 1423238641,
                "priority": 10,
                "contentAvailable": 1,
                "payload":{
                  "key1":"value",
                  "key2":"value"
                }
              },
              "android":{
                "collapseKey":"foo",
                "delayWhileIdle":true,
                "timeToLive":300,
                "payload":{
                  "key1":"value",
                  "key2":"value"
                }
              }
            }
          }
      }).then(function successCallback(response) {
        console.log(response.data);
      }, function errorCallback(response) {
        console.log("Oopies there seems to be an error");
      });

    }

  })

}());
